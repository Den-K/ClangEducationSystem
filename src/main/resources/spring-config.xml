<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="dal"/>
    <context:annotation-config/>

    <bean id="baseDao" class="dal.dao.BaseDao" abstract="true">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="userDao" class="dal.dao.UserDao" parent="baseDao" />
    <bean id="userRolesDao" class="dal.dao.UserRolesDao" parent="baseDao" />

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/CLangEduSystem" />
        <property name="username" value="postgres" />
        <property name="password" value="postgres" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            </props>
        </property>
    </bean>

    <security:http auto-config="true">
        <security:csrf disabled="true"/>
        <security:intercept-url pattern="/page/main**" access="hasRole('ROLE_USER')" />
        <security:form-login
                login-page="/page/login"
                default-target-url="/page/main"
                authentication-failure-url="/page/loginError"
                login-processing-url="/j_spring_security_check"
                username-parameter="login"
                password-parameter="password"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="select login, password, enabled from users where login = ?"
                    authorities-by-username-query="select u.login, r.role
                                                   from users u
                                                   inner join user_roles ur on u.id = ur.user_id
                                                   inner join roles r on r.id = ur.role_id
                                                   where u.login = ?" />
        </security:authentication-provider>
    </security:authentication-manager>


</beans>